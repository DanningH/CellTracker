

function [] = GeneralizedColonyAnalysisAN(filename,thresh,nms,nms2,index1,param1,plottype)



if plottype == 0 % do NOT need to separate into quadrants
    
    for k=1:size(nms2,2)
        
        if exist('plate1');
            
            disp([filename,'plate1']);
            
            colonies{k} = plate1.colonies;
        else
            [colonies{k}, ~]=peaksToColonies(filename); % the choice to run either single cell or circular colony grouping is done within the peakstocolonies function
        end
        M(k) = max([colonies{k}.ncells]);
    end
    
    
    [totalcells]=PlotColAnalysisQuadrAN(colonies,M,thresh,nms2,param1,index1); % separate function which does the plotting
    
    
end

if plottype == 1 %% you DO need to separate into quadrants
for k=1
    
    if exist('plate1');
        
        disp([filename,'plate1']);
        
        colonies{k} = plate1.colonies;
    else
        
        disp(filename);
        [colonies{k}, peaks]=peaksToColonies(filename);% the choice to run the single cell or circular data is now done within the peakstocolonies function
        
    end
end

[toplot,peaks] = GetSeparateQuadrantImgNumbersAN(Nplot,filename,midcoord,fincoord);

quadrants =zeros(length(peaks),1);
for ii=1:length(toplot)
    quadrants(toplot{ii})=ii;
    coloniesnew{ii}=[];
end
for ii=1:length(colonies{1})
    j=unique(quadrants(colonies{1}(ii).imagenumbers));
    if length(j) > 1 || j==0
        disp(['Error colony is in more than one Quadrant: ' int2str(ii)])
    else
        if isempty(coloniesnew{j})
            coloniesnew{j}=colonies{1}(ii);
        else
            coloniesnew{j}(end+1)=colonies{1}(ii);
        end
    end
end

M=max([colonies{1}.ncells]);

[totalcells] = PlotColAnalysisFullChipAN(Nplot,coloniesnew,M,thresh,nms2,param1,index1);


end